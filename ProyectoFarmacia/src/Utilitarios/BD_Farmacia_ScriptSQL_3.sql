-- MySQL Script generated by MySQL Workbench
-- Mon Jun 26 23:35:56 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema bd_Farmacia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema bd_Farmacia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `bd_Farmacia` DEFAULT CHARACTER SET utf8 ;
USE `bd_Farmacia` ;

-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_PROVEEDOR`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_PROVEEDOR` (
  `COD_PRV` CHAR(5) NOT NULL,
  `RAZ_SOC_PRV` VARCHAR(80) NOT NULL,
  `DIR_PRV` VARCHAR(100) NULL,
  `TLF_PRV` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`COD_PRV`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_CLIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_CLIENTE` (
  `COD_CLI` CHAR(5) NOT NULL,
  `NOM_CLI` VARCHAR(30) NOT NULL,
  `APAT_CLI` VARCHAR(30) NOT NULL,
  `AMAT_CLI` VARCHAR(30) NOT NULL,
  `FEC_REG_CLI` DATE NOT NULL,
  `TLF_CLIENTE` CHAR(9) NULL,
  PRIMARY KEY (`COD_CLI`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_CARGO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_CARGO` (
  `COD_CARGO` INT NOT NULL AUTO_INCREMENT,
  `DESC_CARGO` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`COD_CARGO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_EMPLEADO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_EMPLEADO` (
  `COD_EMP` CHAR(5) NOT NULL,
  `NOM_EMP` VARCHAR(30) NOT NULL,
  `APAT_EMP` VARCHAR(30) NOT NULL,
  `AMAT_EMP` VARCHAR(30) NOT NULL,
  `FEC_NAC_EMP` DATE NOT NULL,
  `FEC_ING_EMP` DATE NOT NULL,
  `USER_EMP` VARCHAR(45) NOT NULL,
  `PASS_EMP` VARCHAR(45) NOT NULL,
  `COD_CARGO` INT NOT NULL,
  PRIMARY KEY (`COD_EMP`),
  INDEX `fk_Emp_Cargo_idx` (`COD_CARGO` ASC),
  CONSTRAINT `fk_Emp_Cargo`
    FOREIGN KEY (`COD_CARGO`)
    REFERENCES `bd_Farmacia`.`TB_CARGO` (`COD_CARGO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_LABORATORIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_LABORATORIO` (
  `COD_LAB` INT NOT NULL AUTO_INCREMENT,
  `DESC_LAB` VARCHAR(50) NOT NULL,
  PRIMARY KEY (`COD_LAB`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_CATEGORIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_CATEGORIA` (
  `COD_CAT` INT NOT NULL AUTO_INCREMENT,
  `DESC_CAT` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`COD_CAT`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_PRODUCTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_PRODUCTO` (
  `COD_PRO` CHAR(5) NOT NULL,
  `DESC_PRO` VARCHAR(70) NOT NULL,
  `PRE_PRO` DECIMAL(10,2) NOT NULL,
  `STK_ACT` INT NOT NULL,
  `STK_MIN` INT NOT NULL,
  `UNI_MED` VARCHAR(20) NOT NULL,
  `FEC_VENC` DATE NOT NULL,
  `COD_LAB` INT NOT NULL,
  `COD_CAT` INT NOT NULL,
  PRIMARY KEY (`COD_PRO`),
  INDEX `fk_Pro_Lab_idx` (`COD_LAB` ASC),
  INDEX `fk_Pro_Cat_idx` (`COD_CAT` ASC),
  CONSTRAINT `fk_Pro_Lab`
    FOREIGN KEY (`COD_LAB`)
    REFERENCES `bd_Farmacia`.`TB_LABORATORIO` (`COD_LAB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Pro_Cat`
    FOREIGN KEY (`COD_CAT`)
    REFERENCES `bd_Farmacia`.`TB_CATEGORIA` (`COD_CAT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_VENTA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_VENTA` (
  `NUM_VENTA` INT NOT NULL AUTO_INCREMENT,
  `FEC_VENTA` DATE NOT NULL,
  `EST_VENTA` SMALLINT NOT NULL,
  `COD_CLI` CHAR(5) NOT NULL,
  `COD_EMP` CHAR(5) NOT NULL,
  PRIMARY KEY (`NUM_VENTA`),
  INDEX `fk_Venta_Cliente_idx` (`COD_CLI` ASC),
  INDEX `fk_Venta_Emp_idx` (`COD_EMP` ASC),
  CONSTRAINT `fk_Venta_Cliente`
    FOREIGN KEY (`COD_CLI`)
    REFERENCES `bd_Farmacia`.`TB_CLIENTE` (`COD_CLI`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Venta_Emp`
    FOREIGN KEY (`COD_EMP`)
    REFERENCES `bd_Farmacia`.`TB_EMPLEADO` (`COD_EMP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_DETALLE_VENTA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_DETALLE_VENTA` (
  `COD_VENTA` INT NOT NULL,
  `COD_PRO` CHAR(5) NOT NULL,
  `CANT_VENTA` INT NOT NULL,
  `PREC_VEN` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`COD_VENTA`, `COD_PRO`),
  INDEX `fk_DetVenta_Pro_idx` (`COD_PRO` ASC),
  CONSTRAINT `fk_DetVenta_Venta`
    FOREIGN KEY (`COD_VENTA`)
    REFERENCES `bd_Farmacia`.`TB_VENTA` (`NUM_VENTA`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DetVenta_Pro`
    FOREIGN KEY (`COD_PRO`)
    REFERENCES `bd_Farmacia`.`TB_PRODUCTO` (`COD_PRO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_ORDEN_COMPRA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_ORDEN_COMPRA` (
  `COD_OCOM` CHAR(5) NOT NULL,
  `FEC_OCOM` DATE NOT NULL,
  `EST_OCOM` INT NOT NULL,
  `COD_PRV` CHAR(5) NOT NULL,
  PRIMARY KEY (`COD_OCOM`),
  INDEX `fk_OCom_Prv_idx` (`COD_PRV` ASC),
  CONSTRAINT `fk_OCom_Prv`
    FOREIGN KEY (`COD_PRV`)
    REFERENCES `bd_Farmacia`.`TB_PROVEEDOR` (`COD_PRV`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `bd_Farmacia`.`TB_DETALLE_OCOMPRA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `bd_Farmacia`.`TB_DETALLE_OCOMPRA` (
  `COD_OCOM` CHAR(5) NOT NULL,
  `COD_PRO` CHAR(5) NOT NULL,
  `CANT_PED` INT NOT NULL,
  PRIMARY KEY (`COD_OCOM`, `COD_PRO`),
  INDEX `fk_DetComp_Pro_idx` (`COD_PRO` ASC),
  CONSTRAINT `fk_DetComp_OCom`
    FOREIGN KEY (`COD_OCOM`)
    REFERENCES `bd_Farmacia`.`TB_ORDEN_COMPRA` (`COD_OCOM`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DetComp_Pro`
    FOREIGN KEY (`COD_PRO`)
    REFERENCES `bd_Farmacia`.`TB_PRODUCTO` (`COD_PRO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- SET SQL_MODE=@OLD_SQL_MODE;
-- SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
-- SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


-- -----------------------------------------------------
-- PROCEDIMIENTOS ALMACENADOS: CLIENTE
-- -----------------------------------------------------

-- PROCEDIMIENTO PARA LISTAR CLIENTES
DROP PROCEDURE IF EXISTS ListarCliente;
DELIMITER @@
CREATE PROCEDURE ListarCliente()
BEGIN
	SELECT * FROM TB_CLIENTE;
END  @@
DELIMITER ;

-- PROCEDIMIENTO PARA BUSCAR UN CLIENTE
DROP PROCEDURE IF EXISTS BuscarCliente;
DELIMITER @@
CREATE PROCEDURE BuscarCliente(ID CHAR(5))
BEGIN
	SELECT * FROM TB_CLIENTE WHERE COD_CLI = ID;
END @@
DELIMITER ;

-- PROCEDIMIENTO PARA INSERTAR UN CLIENTE
DROP PROCEDURE IF EXISTS InsertarCliente;
DELIMITER @@
CREATE PROCEDURE InsertarCliente(COD_CLI CHAR(5), NOM_CLI VARCHAR(30), APAT_CLI VARCHAR(30), AMAT_CLI VARCHAR(30), FEC_REG_CLI DATE, XTLF_CLIENTE CHAR(9))
BEGIN
	INSERT TB_CLIENTE VALUES(COD_CLI, NOM_CLI, APAT_CLI, AMAT_CLI, FEC_REG_CLI, TLF_CLIENTE);
END @@
DELIMITER ;

-- PROCEDIMIENTO PARA MODIFICAR CLIENTE
DROP PROCEDURE IF EXISTS ModificarCliente;
DELIMITER @@
CREATE PROCEDURE ModificarCliente(XCOD_CLI CHAR(5), XNOM_CLI VARCHAR(30), XAPAT_CLI VARCHAR(30), XAMAT_CLI VARCHAR(30), XFEC_REG_CLI DATE, XTLF_CLIENTE CHAR(9))
BEGIN
	UPDATE TB_CLIENTE SET NOM_CLI=XNOM_CLI, APAT_CLI=XAPAT_CLI, AMAT_CLI=XAMAT_CLI, FEC_REG_CLI=XFEC_REG_CLI, TLF_CLIENTE=XTLF_CLIENTE WHERE COD_CLI = XCOD_CLI;
END @@
DELIMITER ;

-- PROCEDIMIENTO PARA ELIMINAR FILAS
DROP PROCEDURE IF EXISTS EliminarCliente;
DELIMITER @@
CREATE PROCEDURE EliminarCliente(ID CHAR(5))
BEGIN
	DELETE FROM TB_CLIENTE WHERE COD_CLI=ID;
END @@
DELIMITER ;

